+ srun python 02-multihost-2nodes.py
Total number of devices 8
Process 0 : Devices in current process 1
Process 1 : Devices in current process 1
Process 4 : Devices in current process 1
Process 2 : Devices in current process 1
Process 3 : Devices in current process 1
Process 5 : Devices in current process 1
Process 6 : Devices in current process 1
Process 7 : Devices in current process 1
┌───────────────────────┐
│         GPU 4         │
└───────────────────────┘
┌───────────────────────┐
│         GPU 5         │
└───────────────────────┘
┌───────────────────────┐
│         GPU 6         │
└───────────────────────┘
┌───────────────────────┐
│         GPU 7         │
└───────────────────────┘
┌───────────────────────┐
│         GPU 0         │
└───────────────────────┘
┌───────────────────────┐
│         GPU 3         │
└───────────────────────┘
┌───────────────────────┐
│         GPU 1         │
└───────────────────────┘
┌───────────────────────┐
│         GPU 2         │
└───────────────────────┘
Process 0 : xs array is_fully_addressable True
Process 3 : xs array is_fully_addressable True
Process 1 : xs array is_fully_addressable True
Process 4 : xs array is_fully_addressable True
Process 5 : xs array is_fully_addressable True
Process 6 : xs array is_fully_addressable True
Process 7 : xs array is_fully_addressable True
Process 2 : xs array is_fully_addressable True
Process 0 : Sharding of XS is  SingleDeviceSharding(device=cuda(id=0))
Process 1 : Sharding of XS is  SingleDeviceSharding(device=cuda(id=1))
Process 3 : Sharding of XS is  SingleDeviceSharding(device=cuda(id=3))
Process 4 : Sharding of XS is  SingleDeviceSharding(device=cuda(id=4))
Process 6 : Sharding of XS is  SingleDeviceSharding(device=cuda(id=6))
Process 5 : Sharding of XS is  SingleDeviceSharding(device=cuda(id=5))
Process 7 : Sharding of XS is  SingleDeviceSharding(device=cuda(id=7))
Process 2 : Sharding of XS is  SingleDeviceSharding(device=cuda(id=2))
Process 0 : Value of of y is  [8.]
Process 1 : Value of of y is  [8.]
Process 4 : Value of of y is  [8.]
Process 3 : Value of of y is  [8.]
Process 2 : Value of of y is  [8.]
Process 5 : Value of of y is  [8.]
Process 6 : Value of of y is  [8.]
Process 7 : Value of of y is  [8.]
Process 0 : Sharding of y is  PmapSharding(sharding_spec=ShardingSpec((Unstacked(1),), (ShardedAxis(axis=0),)), device_ids=[0], device_platform=GPU, device_shape=(1,))
Process 4 : Sharding of y is  PmapSharding(sharding_spec=ShardingSpec((Unstacked(1),), (ShardedAxis(axis=0),)), device_ids=[4], device_platform=GPU, device_shape=(1,))
Process 1 : Sharding of y is  PmapSharding(sharding_spec=ShardingSpec((Unstacked(1),), (ShardedAxis(axis=0),)), device_ids=[1], device_platform=GPU, device_shape=(1,))
Process 6 : Sharding of y is  PmapSharding(sharding_spec=ShardingSpec((Unstacked(1),), (ShardedAxis(axis=0),)), device_ids=[6], device_platform=GPU, device_shape=(1,))
Process 3 : Sharding of y is  PmapSharding(sharding_spec=ShardingSpec((Unstacked(1),), (ShardedAxis(axis=0),)), device_ids=[3], device_platform=GPU, device_shape=(1,))
Process 5 : Sharding of y is  PmapSharding(sharding_spec=ShardingSpec((Unstacked(1),), (ShardedAxis(axis=0),)), device_ids=[5], device_platform=GPU, device_shape=(1,))
Process 7 : Sharding of y is  PmapSharding(sharding_spec=ShardingSpec((Unstacked(1),), (ShardedAxis(axis=0),)), device_ids=[7], device_platform=GPU, device_shape=(1,))
Process 2 : Sharding of y is  PmapSharding(sharding_spec=ShardingSpec((Unstacked(1),), (ShardedAxis(axis=0),)), device_ids=[2], device_platform=GPU, device_shape=(1,))
┌───────────────────────┐
│                       │
│                       │
│                       │
│                       │
│         GPU 1         │
│                       │
│                       │
│                       │
│                       │
└───────────────────────┘
┌───────────────────────┐
│                       │
│                       │
│                       │
│                       │
│         GPU 0         │
│                       │
│                       │
│                       │
│                       │
└───────────────────────┘
┌───────────────────────┐
│                       │
│                       │
│                       │
│                       │
│         GPU 3         │
│                       │
│                       │
│                       │
│                       │
└───────────────────────┘
┌───────────────────────┐
│                       │
│                       │
│                       │
│                       │
│         GPU 2         │
│                       │
│                       │
│                       │
│                       │
└───────────────────────┘
┌───────────────────────┐
│                       │
│                       │
│                       │
│                       │
│         GPU 7         │
│                       │
│                       │
│                       │
│                       │
└───────────────────────┘
┌───────────────────────┐
│                       │
│                       │
│                       │
│                       │
│         GPU 6         │
│                       │
│                       │
│                       │
│                       │
└───────────────────────┘
┌───────────────────────┐
│                       │
│                       │
│                       │
│                       │
│         GPU 4         │
│                       │
│                       │
│                       │
│                       │
└───────────────────────┘
┌───────────────────────┐
│                       │
│                       │
│                       │
│                       │
│         GPU 5         │
│                       │
│                       │
│                       │
│                       │
└───────────────────────┘
PositionalSharding error: device_put's second argument must be a Device or a Sharding which represents addressable devices, but got PositionalSharding([[{GPU 0} {GPU 1}]
                    [{GPU 2} {GPU 3}]
                    [{GPU 4} {GPU 5}]
                    [{GPU 6} {GPU 7}]]). You are probably trying to use device_put in multi-controller JAX which is not supported. Please use jax.make_array_from_single_device_arrays API or pass device or Sharding which represents addressable devices.
PositionalSharding error: device_put's second argument must be a Device or a Sharding which represents addressable devices, but got PositionalSharding([[{GPU 0} {GPU 1}]
                    [{GPU 2} {GPU 3}]
                    [{GPU 4} {GPU 5}]
PositionalSharding error: device_put's second argument must be a Device or a Sharding which represents addressable devices, but got PositionalSharding([[{GPU 0} {GPU 1}]
                    [{GPU 2} {GPU 3}]
                    [{GPU 4} {GPU 5}]
                    [{GPU 6} {GPU 7}]]). You are probably trying to use device_put in multi-controller JAX which is not supported. Please use jax.make_array_from_single_device_arrays API or pass device or Sharding which represents addressable devices.
                    [{GPU 6} {GPU 7}]]). You are probably trying to use device_put in multi-controller JAX which is not supported. Please use jax.make_array_from_single_device_arrays API or pass device or Sharding which represents addressable devices.
PositionalSharding error: device_put's second argument must be a Device or a Sharding which represents addressable devices, but got PositionalSharding([[{GPU 0} {GPU 1}]
                    [{GPU 2} {GPU 3}]
                    [{GPU 4} {GPU 5}]
PositionalSharding error: device_put's second argument must be a Device or a Sharding which represents addressable devices, but got PositionalSharding([[{GPU 0} {GPU 1}]
                    [{GPU 2} {GPU 3}]
                    [{GPU 4} {GPU 5}]
                    [{GPU 6} {GPU 7}]]). You are probably trying to use device_put in multi-controller JAX which is not supported. Please use jax.make_array_from_single_device_arrays API or pass device or Sharding which represents addressable devices.
                    [{GPU 6} {GPU 7}]]). You are probably trying to use device_put in multi-controller JAX which is not supported. Please use jax.make_array_from_single_device_arrays API or pass device or Sharding which represents addressable devices.
PositionalSharding error: device_put's second argument must be a Device or a Sharding which represents addressable devices, but got PositionalSharding([[{GPU 0} {GPU 1}]
                    [{GPU 2} {GPU 3}]
                    [{GPU 4} {GPU 5}]
                    [{GPU 6} {GPU 7}]]). You are probably trying to use device_put in multi-controller JAX which is not supported. Please use jax.make_array_from_single_device_arrays API or pass device or Sharding which represents addressable devices.
PositionalSharding error: device_put's second argument must be a Device or a Sharding which represents addressable devices, but got PositionalSharding([[{GPU 0} {GPU 1}]
                    [{GPU 2} {GPU 3}]
                    [{GPU 4} {GPU 5}]
                    [{GPU 6} {GPU 7}]]). You are probably trying to use device_put in multi-controller JAX which is not supported. Please use jax.make_array_from_single_device_arrays API or pass device or Sharding which represents addressable devices.
PositionalSharding error: device_put's second argument must be a Device or a Sharding which represents addressable devices, but got PositionalSharding([[{GPU 0} {GPU 1}]
                    [{GPU 2} {GPU 3}]
                    [{GPU 4} {GPU 5}]
                    [{GPU 6} {GPU 7}]]). You are probably trying to use device_put in multi-controller JAX which is not supported. Please use jax.make_array_from_single_device_arrays API or pass device or Sharding which represents addressable devices.
Process 4 : Sharding of array NamedSharding(mesh=Mesh('x': 8), spec=PartitionSpec('x',))
Process 5 : Sharding of array NamedSharding(mesh=Mesh('x': 8), spec=PartitionSpec('x',))
Process 6 : Sharding of array NamedSharding(mesh=Mesh('x': 8), spec=PartitionSpec('x',))
Process 0 : Sharding of array NamedSharding(mesh=Mesh('x': 8), spec=PartitionSpec('x',))
Process 7 : Sharding of array NamedSharding(mesh=Mesh('x': 8), spec=PartitionSpec('x',))
Process 3 : Sharding of array NamedSharding(mesh=Mesh('x': 8), spec=PartitionSpec('x',))
Process 1 : Sharding of array NamedSharding(mesh=Mesh('x': 8), spec=PartitionSpec('x',))
Process 2 : Sharding of array NamedSharding(mesh=Mesh('x': 8), spec=PartitionSpec('x',))
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│ GPU 0 │ GPU 1 │ GPU 2 │ GPU 3 │ GPU 4 │ GPU 5 │ GPU 6 │ GPU 7 │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│ GPU 0 │ GPU 1 │ GPU 2 │ GPU 3 │ GPU 4 │ GPU 5 │ GPU 6 │ GPU 7 │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│ GPU 0 │ GPU 1 │ GPU 2 │ GPU 3 │ GPU 4 │ GPU 5 │ GPU 6 │ GPU 7 │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│ GPU 0 │ GPU 1 │ GPU 2 │ GPU 3 │ GPU 4 │ GPU 5 │ GPU 6 │ GPU 7 │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│ GPU 0 │ GPU 1 │ GPU 2 │ GPU 3 │ GPU 4 │ GPU 5 │ GPU 6 │ GPU 7 │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│ GPU 0 │ GPU 1 │ GPU 2 │ GPU 3 │ GPU 4 │ GPU 5 │ GPU 6 │ GPU 7 │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│ GPU 0 │ GPU 1 │ GPU 2 │ GPU 3 │ GPU 4 │ GPU 5 │ GPU 6 │ GPU 7 │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
│ GPU 0 │ GPU 1 │ GPU 2 │ GPU 3 │ GPU 4 │ GPU 5 │ GPU 6 │ GPU 7 │
└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘
 Global array print error: Fetching value for `jax.Array` that spans non-addressable devices is not possible. You can use `jax.experimental.multihost_utils.process_allgather` for this use case.
 Global array print error: Fetching value for `jax.Array` that spans non-addressable devices is not possible. You can use `jax.experimental.multihost_utils.process_allgather` for this use case.
 Global array print error: Fetching value for `jax.Array` that spans non-addressable devices is not possible. You can use `jax.experimental.multihost_utils.process_allgather` for this use case.
 Global array print error: Fetching value for `jax.Array` that spans non-addressable devices is not possible. You can use `jax.experimental.multihost_utils.process_allgather` for this use case.
 Global array print error: Fetching value for `jax.Array` that spans non-addressable devices is not possible. You can use `jax.experimental.multihost_utils.process_allgather` for this use case.
 Global array print error: Fetching value for `jax.Array` that spans non-addressable devices is not possible. You can use `jax.experimental.multihost_utils.process_allgather` for this use case.
 Global array print error: Fetching value for `jax.Array` that spans non-addressable devices is not possible. You can use `jax.experimental.multihost_utils.process_allgather` for this use case.
 Global array print error: Fetching value for `jax.Array` that spans non-addressable devices is not possible. You can use `jax.experimental.multihost_utils.process_allgather` for this use case.
Process 2 : Gathered Global array value is [1. 1. 1. 1. 1. 1. 1. 1.]
Process 3 : Gathered Global array value is [1. 1. 1. 1. 1. 1. 1. 1.]
Process 0 : Gathered Global array value is [1. 1. 1. 1. 1. 1. 1. 1.]
Process 4 : Gathered Global array value is [1. 1. 1. 1. 1. 1. 1. 1.]
Process 1 : Gathered Global array value is [1. 1. 1. 1. 1. 1. 1. 1.]
Process 5 : Gathered Global array value is [1. 1. 1. 1. 1. 1. 1. 1.]
Process 7 : Gathered Global array value is [1. 1. 1. 1. 1. 1. 1. 1.]
Process 6 : Gathered Global array value is [1. 1. 1. 1. 1. 1. 1. 1.]
Process 0 : Global array type <class 'jaxlib.xla_extension.ArrayImpl'>
Process 0 : Global array is_fully_addressable False
Process 1 : Global array type <class 'jaxlib.xla_extension.ArrayImpl'>
Process 1 : Global array is_fully_addressable False
Process 4 : Global array type <class 'jaxlib.xla_extension.ArrayImpl'>
Process 4 : Global array is_fully_addressable False
Process 3 : Global array type <class 'jaxlib.xla_extension.ArrayImpl'>
Process 3 : Global array is_fully_addressable False
Process 5 : Global array type <class 'jaxlib.xla_extension.ArrayImpl'>
Process 5 : Global array is_fully_addressable False
Process 2 : Global array type <class 'jaxlib.xla_extension.ArrayImpl'>
Process 2 : Global array is_fully_addressable False
Process 7 : Global array type <class 'jaxlib.xla_extension.ArrayImpl'>
Process 7 : Global array is_fully_addressable False
Process 6 : Global array type <class 'jaxlib.xla_extension.ArrayImpl'>
Process 6 : Global array is_fully_addressable False
Process 0 : Gathered Global array type <class 'numpy.ndarray'>
 Global array print error: 'numpy.ndarray' object has no attribute 'sharding'
*****************************************************************************
Process 1 : Gathered Global array type <class 'numpy.ndarray'>
 Global array print error: 'numpy.ndarray' object has no attribute 'sharding'
Process 3 : Gathered Global array type <class 'numpy.ndarray'>
 Global array print error: 'numpy.ndarray' object has no attribute 'sharding'
*****************************************************************************
STEP HAS BEGUN
*****************************************************************************
*****************************************************************************
Process 4 : Gathered Global array type <class 'numpy.ndarray'>
Process 5 : Gathered Global array type <class 'numpy.ndarray'>
 Global array print error: 'numpy.ndarray' object has no attribute 'sharding'
 Global array print error: 'numpy.ndarray' object has no attribute 'sharding'
Process 7 : Gathered Global array type <class 'numpy.ndarray'>
 Global array print error: 'numpy.ndarray' object has no attribute 'sharding'
Process 6 : Gathered Global array type <class 'numpy.ndarray'>
 Global array print error: 'numpy.ndarray' object has no attribute 'sharding'
Process 2 : Gathered Global array type <class 'numpy.ndarray'>
 Global array print error: 'numpy.ndarray' object has no attribute 'sharding'
[[cuda(id=0) cuda(id=1)]
 [cuda(id=2) cuda(id=3)]
 [cuda(id=4) cuda(id=5)]
 [cuda(id=6) cuda(id=7)]]
[[cuda(id=0) cuda(id=1)]
 [cuda(id=2) cuda(id=3)]
 [cuda(id=4) cuda(id=5)]
 [cuda(id=6) cuda(id=7)]]
[[cuda(id=0) cuda(id=1)]
 [cuda(id=2) cuda(id=3)]
 [cuda(id=4) cuda(id=5)]
 [cuda(id=6) cuda(id=7)]]
[[cuda(id=0) cuda(id=1)]
 [cuda(id=2) cuda(id=3)]
 [cuda(id=4) cuda(id=5)]
 [cuda(id=6) cuda(id=7)]]
[[cuda(id=0) cuda(id=1)]
 [cuda(id=2) cuda(id=3)]
 [cuda(id=4) cuda(id=5)]
 [cuda(id=6) cuda(id=7)]]
[[cuda(id=0) cuda(id=1)]
 [cuda(id=2) cuda(id=3)]
 [cuda(id=4) cuda(id=5)]
 [cuda(id=6) cuda(id=7)]]
[[cuda(id=0) cuda(id=1)]
 [cuda(id=2) cuda(id=3)]
 [cuda(id=4) cuda(id=5)]
 [cuda(id=6) cuda(id=7)]]
[[cuda(id=0) cuda(id=1)]
 [cuda(id=2) cuda(id=3)]
 [cuda(id=4) cuda(id=5)]
 [cuda(id=6) cuda(id=7)]]
Traceback (most recent call last):
  File "/gpfsdswork/projects/rech/nih/uow47az/Projects/learn/02-multihost-2nodes.py", line 110, in <module>
Traceback (most recent call last):
  File "/gpfsdswork/projects/rech/nih/uow47az/Projects/learn/02-multihost-2nodes.py", line 110, in <module>
Traceback (most recent call last):
  File "/gpfsdswork/projects/rech/nih/uow47az/Projects/learn/02-multihost-2nodes.py", line 110, in <module>
Traceback (most recent call last):
  File "/gpfsdswork/projects/rech/nih/uow47az/Projects/learn/02-multihost-2nodes.py", line 110, in <module>
Traceback (most recent call last):
  File "/gpfsdswork/projects/rech/nih/uow47az/Projects/learn/02-multihost-2nodes.py", line 110, in <module>
Traceback (most recent call last):
  File "/gpfsdswork/projects/rech/nih/uow47az/Projects/learn/02-multihost-2nodes.py", line 110, in <module>
Traceback (most recent call last):
  File "/gpfsdswork/projects/rech/nih/uow47az/Projects/learn/02-multihost-2nodes.py", line 110, in <module>
    arr4_2 = multihost_utils.host_local_array_to_global_array(xs, mesh, pspecs)  #
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 289, in host_local_array_to_global_array
Traceback (most recent call last):
  File "/gpfsdswork/projects/rech/nih/uow47az/Projects/learn/02-multihost-2nodes.py", line 110, in <module>
    arr4_2 = multihost_utils.host_local_array_to_global_array(xs, mesh, pspecs)  #
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 289, in host_local_array_to_global_array
    arr4_2 = multihost_utils.host_local_array_to_global_array(xs, mesh, pspecs)  #
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 289, in host_local_array_to_global_array
    arr4_2 = multihost_utils.host_local_array_to_global_array(xs, mesh, pspecs)  #
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 289, in host_local_array_to_global_array
    arr4_2 = multihost_utils.host_local_array_to_global_array(xs, mesh, pspecs)  #
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 289, in host_local_array_to_global_array
    arr4_2 = multihost_utils.host_local_array_to_global_array(xs, mesh, pspecs)  #
    out_flat = [
    out_flat = [
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 290, in <listcomp>
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 289, in host_local_array_to_global_array
    out_flat = [
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 290, in <listcomp>
    out_flat = [
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 290, in <listcomp>
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 290, in <listcomp>
    out_flat = [
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 290, in <listcomp>
    host_local_array_to_global_array_p.bind(inp, global_mesh=global_mesh,
    host_local_array_to_global_array_p.bind(inp, global_mesh=global_mesh,
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 444, in bind
    host_local_array_to_global_array_p.bind(inp, global_mesh=global_mesh,
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 444, in bind
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 444, in bind
    host_local_array_to_global_array_p.bind(inp, global_mesh=global_mesh,
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 444, in bind
    out_flat = [
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 290, in <listcomp>
    arr4_2 = multihost_utils.host_local_array_to_global_array(xs, mesh, pspecs)  #
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 289, in host_local_array_to_global_array
    host_local_array_to_global_array_p.bind(inp, global_mesh=global_mesh,
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 444, in bind
    arr4_2 = multihost_utils.host_local_array_to_global_array(xs, mesh, pspecs)  #
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 289, in host_local_array_to_global_array
    return self.bind_with_trace(find_top_trace(args), args, params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 447, in bind_with_trace
    return self.bind_with_trace(find_top_trace(args), args, params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 447, in bind_with_trace
    return self.bind_with_trace(find_top_trace(args), args, params)
    host_local_array_to_global_array_p.bind(inp, global_mesh=global_mesh,
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 444, in bind
    return self.bind_with_trace(find_top_trace(args), args, params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 447, in bind_with_trace
    out_flat = [
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 447, in bind_with_trace
    return self.bind_with_trace(find_top_trace(args), args, params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 447, in bind_with_trace
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 290, in <listcomp>
    out_flat = [
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 290, in <listcomp>
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 935, in process_primitive
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 935, in process_primitive
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
    host_local_array_to_global_array_p.bind(inp, global_mesh=global_mesh,
    return self.bind_with_trace(find_top_trace(args), args, params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 447, in bind_with_trace
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 444, in bind
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 935, in process_primitive
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 935, in process_primitive
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 935, in process_primitive
    host_local_array_to_global_array_p.bind(inp, global_mesh=global_mesh,
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 444, in bind
    return self.bind_with_trace(find_top_trace(args), args, params)
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 935, in process_primitive
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 447, in bind_with_trace
    return primitive.impl(*tracers, **params)
    return primitive.impl(*tracers, **params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 244, in host_local_array_to_global_array_impl
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 244, in host_local_array_to_global_array_impl
    return self.bind_with_trace(find_top_trace(args), args, params)
    return primitive.impl(*tracers, **params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 447, in bind_with_trace
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 244, in host_local_array_to_global_array_impl
    return primitive.impl(*tracers, **params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 244, in host_local_array_to_global_array_impl
    return primitive.impl(*tracers, **params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 244, in host_local_array_to_global_array_impl
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 935, in process_primitive
    arr.sharding.is_equivalent_to(local_sharding, arr.ndim)):
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 123, in is_equivalent_to
    arr.sharding.is_equivalent_to(local_sharding, arr.ndim)):
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 123, in is_equivalent_to
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/core.py", line 935, in process_primitive
    return primitive.impl(*tracers, **params)
    arr.sharding.is_equivalent_to(local_sharding, arr.ndim)):
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 123, in is_equivalent_to
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 244, in host_local_array_to_global_array_impl
    arr.sharding.is_equivalent_to(local_sharding, arr.ndim)):
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 123, in is_equivalent_to
    arr.sharding.is_equivalent_to(local_sharding, arr.ndim)):
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 123, in is_equivalent_to
    other._to_xla_hlo_sharding(ndim))
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 346, in _to_xla_hlo_sharding
    other._to_xla_hlo_sharding(ndim))
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 346, in _to_xla_hlo_sharding
    other._to_xla_hlo_sharding(ndim))
    return primitive.impl(*tracers, **params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 244, in host_local_array_to_global_array_impl
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 346, in _to_xla_hlo_sharding
    arr.sharding.is_equivalent_to(local_sharding, arr.ndim)):
    other._to_xla_hlo_sharding(ndim))
    other._to_xla_hlo_sharding(ndim))
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 346, in _to_xla_hlo_sharding
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 123, in is_equivalent_to
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 346, in _to_xla_hlo_sharding
    return primitive.impl(*tracers, **params)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/experimental/multihost_utils.py", line 244, in host_local_array_to_global_array_impl
    return named_sharding_to_xla_hlo_sharding(self, num_dimensions)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 173, in named_sharding_to_xla_hlo_sharding
    other._to_xla_hlo_sharding(ndim))
    return named_sharding_to_xla_hlo_sharding(self, num_dimensions)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 173, in named_sharding_to_xla_hlo_sharding
    return named_sharding_to_xla_hlo_sharding(self, num_dimensions)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 173, in named_sharding_to_xla_hlo_sharding
    arr.sharding.is_equivalent_to(local_sharding, arr.ndim)):
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 123, in is_equivalent_to
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 346, in _to_xla_hlo_sharding
    sharding_spec, special_axes = self._get_sharding_spec(
    arr.sharding.is_equivalent_to(local_sharding, arr.ndim)):
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 123, in is_equivalent_to
    sharding_spec, special_axes = self._get_sharding_spec(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 335, in _get_sharding_spec
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 335, in _get_sharding_spec
    other._to_xla_hlo_sharding(ndim))
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 346, in _to_xla_hlo_sharding
    return named_sharding_to_xla_hlo_sharding(self, num_dimensions)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 173, in named_sharding_to_xla_hlo_sharding
    return named_sharding_to_xla_hlo_sharding(self, num_dimensions)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 173, in named_sharding_to_xla_hlo_sharding
    other._to_xla_hlo_sharding(ndim))
    sharding_spec, special_axes = self._get_sharding_spec(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 335, in _get_sharding_spec
    sharding_spec, special_axes = self._get_sharding_spec(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 335, in _get_sharding_spec
    sharding_spec, special_axes = self._get_sharding_spec(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 335, in _get_sharding_spec
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 346, in _to_xla_hlo_sharding
    return named_sharding_to_xla_hlo_sharding(self, num_dimensions)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 173, in named_sharding_to_xla_hlo_sharding
    return named_sharding_to_xla_hlo_sharding(self, num_dimensions)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 173, in named_sharding_to_xla_hlo_sharding
    sharding_spec = sharding_specs.new_mesh_sharding_specs(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_specs.py", line 262, in make_sharding_spec
    sharding_spec = sharding_specs.new_mesh_sharding_specs(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_specs.py", line 262, in make_sharding_spec
    sharding_spec = sharding_specs.new_mesh_sharding_specs(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_specs.py", line 262, in make_sharding_spec
    sharding_spec = sharding_specs.new_mesh_sharding_specs(
    sharding_spec, special_axes = self._get_sharding_spec(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 335, in _get_sharding_spec
    sharding_spec, special_axes = self._get_sharding_spec(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 335, in _get_sharding_spec
    sharding_spec = sharding_specs.new_mesh_sharding_specs(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_specs.py", line 262, in make_sharding_spec
    return named_sharding_to_xla_hlo_sharding(self, num_dimensions)
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 173, in named_sharding_to_xla_hlo_sharding
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_specs.py", line 262, in make_sharding_spec
    chunked = sharding[axis]
IndexError: list index out of range
    chunked = sharding[axis]
    chunked = sharding[axis]
IndexError: list index out of range
    sharding_spec = sharding_specs.new_mesh_sharding_specs(
IndexError: list index out of range
    chunked = sharding[axis]
    sharding_spec, special_axes = self._get_sharding_spec(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_impls.py", line 335, in _get_sharding_spec
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_specs.py", line 262, in make_sharding_spec
    sharding_spec = sharding_specs.new_mesh_sharding_specs(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_specs.py", line 262, in make_sharding_spec
    chunked = sharding[axis]
IndexError: list index out of range
IndexError: list index out of range
    chunked = sharding[axis]
IndexError: list index out of range
    sharding_spec = sharding_specs.new_mesh_sharding_specs(
  File "/gpfswork/rech/tkc/uow47az/.conda/envs/ax/lib/python3.10/site-packages/jax/_src/sharding_specs.py", line 262, in make_sharding_spec
    chunked = sharding[axis]
IndexError: list index out of range
    chunked = sharding[axis]
IndexError: list index out of range
srun: error: r13i3n0: tasks 1-3: Exited with exit code 1
srun: Terminating StepId=236114.0
srun: error: r13i3n1: tasks 5-7: Exited with exit code 1
slurmstepd: error: *** STEP 236114.0 ON r13i3n0 CANCELLED AT 2024-01-23T14:28:24 ***
srun: error: r13i3n0: task 0: Exited with exit code 1
srun: error: r13i3n1: task 4: Exited with exit code 1
